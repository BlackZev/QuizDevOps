name: CI/CD Backend

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  backend:
    name: Build and Test Backend
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'
          cache: maven

      - name: Build with Maven
        working-directory: back
        run: mvn -B package --file pom.xml -DskipTests

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: backend-jar
          path: back/target/*.jar

  docker-backend:
    name: Build Docker Image for Backend
    runs-on: ubuntu-latest
    needs: backend

    steps:
      - uses: actions/checkout@v4

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: back/build-output

      - name: Rename JAR to app.jar
        run: mv back/build-output/*.jar back/app.jar

      - name: Build Docker image
        working-directory: back
        run: docker build -t back .

  build-and-push-images:
    name: Push Docker Image to DockerHub
    runs-on: ubuntu-latest
    needs: docker-backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: back/build-output

      - name: Prepare JAR for Docker build
        run: mv back/build-output/*.jar back/app.jar

      - name: Build & Push Backend Image
        uses: docker/build-push-action@v5
        with:
          context: ./back
          file: ./back/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/java-backend:latest

  docker-compose-test:
    name: Docker Compose Integration Test
    runs-on: ubuntu-latest
    needs: build-and-push-images

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose

      - name: Create .env file
        run: |
          echo "DB_NAME=${{ secrets.DB_NAME }}" >> .env
          echo "DB_USER=${{ secrets.DB_USER }}" >> .env
          echo "DB_PSWD=${{ secrets.DB_PSWD }}" >> .env

      - name: Launch docker-compose
        run: docker compose --env-file .env up -d --build

      - name: Verify running containers
        run: docker ps

      - name: Tear down
        if: always()
        run: docker compose --env-file .env down --volumes

      - name: Remove .env file
        if: always()
        run: rm -f .env
